name: "Is my code great?"
description: "Executes the is-my-code-great CLI tool to validate code quality."
author: "AlienEngineer"
inputs:
  base-branch:
    description: "Base branch to compare against"
    required: false
    default: "${{ github.event.repository.default_branch }}"
  verbose:
    description: "Enable verbose output"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    
    - name: "fetch main"
      shell: bash
      run: |
        git switch -c ${{ github.head_ref }}
        git fetch origin ${{ inputs.base-branch }}:${{ inputs.base-branch }}

    - name: "execute script"
      shell: bash
      run: |
        VERBOSE_FLAG=""
        if [[ "${{ inputs.verbose }}" == "true" ]]; then
          VERBOSE_FLAG="-v"
        fi
        
        bin/is-my-code-great -b ${{ inputs.base-branch }} $VERBOSE_FLAG > results.txt
        echo "VALIDATION_OUTPUT<<EOF" >> $GITHUB_ENV
        cat results.txt >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: "Comment PR with results"
      uses: actions/github-script@v7
      with:
        script: |
          const results = process.env.VALIDATION_OUTPUT || 'No results found.';
          const commentBody = `### Is My Code Great Results:\n\n\`\`\`\n${results}\n\`\`\``;


          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          const existingComment = comments.find(c => c.body.includes('Is My Code Great Results:'));

          if (existingComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: commentBody
            });
          } else {  
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
          }
