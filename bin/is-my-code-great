#!/usr/bin/env bash

show_help() {
	local manfile="$(dirname "$0")/../man/is-my-code-great.1"
	if command -v less >/dev/null 2>&1; then
		less "$manfile"
	else
		head -n 100 "$manfile"
	fi
}

FRAMEWORK=""
DIR=""
VERBOSE=0
BASE_BRANCH="main"
CURRENT_BRANCH="" #"$(git rev-parse --abbrev-ref HEAD)"
LOCAL_RUN=true


while [[ $# -gt 0 ]]; do
	case $1 in
		-h|--help)
			show_help
			exit 0
			;;
		-f|--framework)
			FRAMEWORK="$2"
			shift 2
			;;
        -b|--base)
            LOCAL_RUN=false
            BASE_BRANCH="$2"
            shift 2
            ;;
        -c|--current)
            LOCAL_RUN=false
            CURRENT_BRANCH="$2"
            shift 2
            ;;
		
        -g|--use-git-diff)
            LOCAL_RUN=false
            shift 2
            ;;
			
		-v|--verbose)
			VERBOSE=1
			shift
			;;
		--)
			shift
			break
			;;
		-*)
			echo "Unknown option: $1" >&2
			show_help
			exit 1
			;;
		*)
			DIR="$1"
			shift
			;;
	esac
done

if [ -z "$DIR" ]; then
	DIR="."
fi

source "$(dirname "$0")/../lib/core/framework-detect.sh"

if [ -z "$FRAMEWORK" ]; then
	if [ "$VERBOSE" = "1" ]; then
		echo "[main] No framework specified, attempting auto-detection..." >&2
	fi
	FRAMEWORK=$(detect_framework "$DIR" "$VERBOSE")
	if [ $? -ne 0 ]; then
		echo "Could not auto-detect framework. Please specify with -f." >&2
		exit 1
	fi
fi

# We can only set the current branch after receiving in which directory we are running.

if [ "$LOCAL_RUN" = false ]; then
	if [ -z "$CURRENT_BRANCH" ]; then
		current_dir=$(pwd);
		cd "$DIR" || { echo "❌ Dir not found: $DIR" >&2; exit 1; }
		CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
		cd "$current_dir" || { echo "❌ Could not return to original directory: $current_dir" >&2; exit 1; }
	fi
fi

source "$(dirname "$0")/../lib/analysis.sh"
run_analysis "$DIR" "$FRAMEWORK" "$BASE_BRANCH" "$CURRENT_BRANCH" "$LOCAL_RUN"
